security:
    encoders:
        App\Entity\User: bcrypt

    role_hierarchy:
        ROLE_ADMIN: [ROLE_MANAGE_GENUS, ROLE_ALLOWED_TO_SWITCH]
        ROLE_SUPERADMIN: [ROLE_ADMIN]

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    #providers:
        #in_memory: { memory: ~ }

    # http://symfony.com/doc/current/book/security.html#where-do-users-come-from-user-providers
    providers:
        our_users:
            entity: { class: App\Entity\User, property: email }

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        login:
            pattern: ^/(login)
            guard:
                authenticators:
                    - App\Security\LoginFormAuthenticator
            anonymous: ~
            logout:
                path: /logout
            context: default
        main:
            guard:
                authenticators:
                    - App\Security\LoginFormAuthenticator
            logout:
                path: /logout
            switch_user: ~
            context: default

            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
